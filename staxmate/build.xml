<?xml version="1.0" standalone='yes'?>

    <project name="StaxMate" basedir="." default="readme">

    <!-- Version information -->

    <!-- Woodstox version -->
    <property name="STAXMATE_TITLE" value="StaxMate" />
    <property name="STAXMATE_VERSION" value="0.6" />
    <property name="STAXMATE_VENDOR" value="http://woodstox.codehaus.org" />

    <property name="ProjectName" value="StaxMate library" />
    <!-- Source directories -->
    <property name="SrcDir" location="${basedir}/src" />
    <property name="JavaSrcDir" location="${SrcDir}/java" />
    <property name="TestSrcDir" location="${SrcDir}/test" />
    <!-- Libs -->
    <property name="LibDir" location="${basedir}/lib" />
    <!-- Build-related -->
    <property name="BuildDir" location="${basedir}/build" />
    <property name="BuildClassesDir" location="${BuildDir}/classes" />
    <!-- Documentation -->
    <property name="DocDir" location="${basedir}/doc" />
    <property name="JavaDocDir" location="${BuildDir}/javadoc" />
    <!-- Test suite -->
    <property name="TestDir" location="${basedir}/test" />
    <property name="TestBuildDir" location="${TestDir}/build" />
    <property name="TestResultsDir" location="${TestDir}/results" />
    <property name="TestXmlResultsDir" location="${TestResultsDir}/xml" />
    <!-- Distribution -->
    <property name="DistDir" location="${basedir}/dist" />

    <path id="classpath">
        <fileset dir="${LibDir}" includes="*.jar" />
    </path>

    <!--*********************************************************************-->
    <!-- The readme target shows a brief description of all targets          -->
    <!-- supported by this ant build file                                    -->
    <!--*********************************************************************-->
    <target name="readme">
        <echo message = "${ProjectName}'s available targets" />
        <echo message = "---------------------------------------------------" />
        <echo message = "1)  readme - Displays this information (default target)." />
        <echo message = "2)  clean - Remove any generated files/directories." />
        <echo message = "3)  compile - Compile all non-test ${ProjectName} code." />
        <echo message = "4)  jar - Compile and create jar for non-test ${ProjectName} code." />
        <echo message = "5)  javadoc - Generate ${ProjectName} code documentation." />
        <echo message = "6)  test.compile - Compile ${ProjectName} code and test code" />
        <echo message = "       for JUnit tests." />
        <echo message = "7)  test - Run JUnit tests." />
        <echo message = "       Reports results and generates html output." />
        <echo message = "8)  dist - Create distribution directory and copy necessary files there" />
        <echo message = "9) all - Run the clean, compile, javadoc," />
        <echo message = "         test and dist targets." />  
    </target>

    <target name="prepare">
        <!-- make build directories -->
        <mkdir dir="${BuildDir}" />
        <mkdir dir="${BuildClassesDir}" />

        <!-- make docs directories -->
        <mkdir dir="${DocDir}" />
        <mkdir dir="${JavaDocDir}" />

        <!-- make test output directories -->
        <mkdir dir="${TestDir}" />
        <mkdir dir="${TestBuildDir}" />
        <mkdir dir="${TestResultsDir}" />
        <mkdir dir="${TestXmlResultsDir}" />

        <!-- and finally distribution dir -->
        <mkdir dir="${DistDir}" />
    </target>

    <!--*********************************************************************-->
    <!-- clean - Removes all generated files/directories.                    -->
    <!--*********************************************************************-->
    <target name="clean">
        <delete dir="${BuildDir}"/>
        <delete dir="${DocDir}"/>
        <delete dir="${TestDir}"/>
        <delete dir="${DistDir}"/>
    </target>

    <target name="compile" depends="prepare">
        <javac SrcDir="${JavaSrcDir}" destdir="${BuildClassesDir}"
            debug="true"
        >
            <include name="com/ctc/**/*.java" />
            <classpath refid="classpath" />
        </javac>
    </target>

    <target name="jar" depends="compile">
        <jar jarfile="${BuildDir}/staxmate-${STAXMATE_VERSION}.jar"
            filesonly="true" >
          <manifest>
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Implementation-Title"   value="${STAXMATE_TITLE}"/>
            <attribute name="Implementation-Version" value="${STAXMATE_VERSION}"/>
            <attribute name="Implementation-Vendor"  value="${STAXMATE_VENDOR}"/>
          </manifest>
          <fileset dir="${BuildClassesDir}">
             <include name="com/ctc/**/*.class" />
          </fileset>
        </jar>
    </target> 

    <target name="javadoc" depends="prepare">
        <!-- Build a dirpath that contains just the "source" tree -->
        <javadoc windowtitle="${ProjectName}"
            destdir="${JavaDocDir}" 
            author="true" 
            version="true">
            <packageset dir="${JavaSrcDir}" defaultexcludes="yes">
                <include name="com/ctc/**" />
            </packageset>
            <classpath refid="classpath" />
        </javadoc>
    </target> 
 
    <target name="all" depends="clean,javadoc,test,dist">
        <!-- This target simply depends on others to do its job -->
    </target>

    <!--*********************************************************************-->
    <!-- Tasks from here down are in support of junit tests.                 -->
    <!--*********************************************************************-->
    <target name="junit">
        <available property="junit.present" classname="junit.framework.TestCase" />
    </target>

    <target name="test.compile" depends="junit, jar" if="junit.present">
    </target>

    <target name="test" depends="test.compile" if="junit.present">
    </target>

    <target name="dist" depends="compile,jar,javadoc"
    >
       <!-- First, let's copy the binary jars to dist -->
       <copy todir="${DistDir}" file="${BuildDir}/staxmate.jar" />
       <!-- Then let's create the source distribution package -->
       <tar basedir="${basedir}" destfile="${DistDir}/staxmate-src.tar"
        includes="build.xml" >
          <tarfileset dir="." includes="src/**/*.java" />
          <tarfileset dir="." includes="release-notes/*" />
       </tar>
       <gzip zipfile="${DistDir}/staxmate-src.tar.gz" src="${DistDir}/staxmate-src.tar" />
       <!-- Then copy javadocs -->
       <copy todir="${DistDir}">
         <fileset dir="${DocDir}" includes="javadoc/**/*" />
       </copy>
       <!-- Plus, let's also just copy README and compatibility files, in
            addition to being included in source package
         -->
       <copy todir="${DistDir}" >
            <fileset dir="." includes="release-notes/*" />
       </copy>
    </target>
</project>
