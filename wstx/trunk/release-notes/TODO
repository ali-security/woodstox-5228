This file lists things that I would like to work on for next releases;
from bugs to new features.


== Unit Testing ==

* There is now basic Woodstox-specific test suite (under src/test).
  Its main purpose is to complement StaxTest by testing things that
  can not be specified via StAX API.
  Currently testing is really limited to just trying out different
  combinations of performance settings, and it'd be good to thoroughly
  test actual functionality that is not enabled by default:
    * Should test preferred prefix mapping for writer ns prefixes


== XML specs conformance ==

* Full text character validation (XML 1.1)?
   * For textual content (and comments, PIs)
* Support for XML 1.1 white space validation/normalization?
* Consider adding support for xml:base attribute?
* Should there be special handling for xml:space attribute?

== DTD-handling ==

* Implement catalog handling to allow using public ids and
  overriding/redirecting system id references?
* Try to verify entity nesting: entity values should not contain improperly
  nested elements, as per XML specs.
* DTD++?
* Optional output validation against DTD (might be pretty useful)
* Using external validator? (JARV)


== Missing/unused StAX features ==

* (More) properties (read-only) for stream/event readers/writers; currently
  the only use is for accessing entities/notations stream reader has
  read from DTD subsets.
    * Specifically, allow checking if an element is empty element?


== Stream writer issues ==

* Refactor so that there are 3 concrete implementations (instead of just
  2); basically separate out namespace repairing and non-repairing 
  handling to separate classes.

== Optimizing ==

* Try to keep track of white space status, in "fast" parsing (ie. if no
  copying is needed)? Will be more important when doing DTD-based normalization
  of attributes, marking if ignorable white space and so forth.
* (for 2.0 or 3.0): try to eliminate separate conversion to char, then
  parsing; would speed up common cases of UTF-8 and ISO-Latin? Would
  require demoting much of parsing to scanner/reader level, duplicating
  some functionality (one implementation per encoding). Wonder if it'd
  be worth it?


== Compatibility ==

* Implement missing JAXP Sources (SAXSource, DOMSource); now only uses
  StreamSources?
* Implement missing JAXP Targets (SAXTarget, DOMTarget); now only uses
  StreamSources?
* Maybe implement SAX interface; although wrappers exist, they currently
  may not be able to pass DTD information. There's also potential performance
  gain from doing it straight from Woodstox.


== Convenience ==

* Optional pretty-printing with writers, configurable indentation.

== Spin-offs ==

* Refactor to allow for excluding things that J2ME shouldn't need: possibly
  create "j2me-lite" and "j2me-normal"; former without any DTD handling?

